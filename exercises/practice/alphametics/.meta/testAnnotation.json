[
  {
    "test_code": "alphametics.tests.ex1 = let\n  actual = solve \"I + BB == ILL\"\n  expected = Some [(?I, 1),(?B, 9),(?L, 0)]\n  Test.label \"puzzle with three letters\" <| Test.expect (on (===) (Optional.map List.sort) actual expected)",
    "name": "alphametics.tests.ex1"
  },
  {
    "test_code": "alphametics.tests.ex2 = let\n  actual = solve \"A == B\"\n  expected = None\n  Test.label \"solution must have unique value for each letter\" <| Test.expect (on (===) (Optional.map List.sort) actual expected)",
    "name": "alphametics.tests.ex2"
  },
  {
    "test_code": "alphametics.tests.ex3 = let\n  actual = solve \"ACA + DD == BD\"\n  expected = None\n  Test.label \"leading zero solution is invalid\" <| Test.expect (on (===) (Optional.map List.sort) actual expected)",
    "name": "alphametics.tests.ex3"
  },
  {
    "test_code": "alphametics.tests.ex4 = let\n  actual = solve \"A + A + A + A + A + A + A + A + A + A + A + B == BCC\"\n  expected = Some [(?A, 9),(?B, 1),(?C, 0)]\n  Test.label \"puzzle with two digits final carry\" <| Test.expect (on (===) (Optional.map List.sort) actual expected)",
    "name": "alphametics.tests.ex4"
  },
  {
    "test_code": "alphametics.tests.ex5 = let\n  actual = solve \"AS + A == MOM\"\n  expected = Some [(?A, 9),(?S, 2),(?M, 1),(?O, 0)]\n  Test.label \"puzzle with four letters\" <| Test.expect (on (===) (Optional.map List.sort) actual expected)",
    "name": "alphametics.tests.ex5"
  },
  {
    "test_code": "alphametics.tests.ex6 = let\n  actual = solve \"NO + NO + TOO == LATE\"\n  expected = Some [(?N, 7),(?O, 4),(?T, 9),(?L, 1),(?A, 0),(?E, 2)]\n  Test.label \"puzzle with six letters\" <| Test.expect (on (===) (Optional.map List.sort) actual expected)",
    "name": "alphametics.tests.ex6"
  },
  {
    "test_code": "alphametics.tests.ex7 = let\n  actual = solve \"HE + SEES + THE == LIGHT\"\n  expected = Some [(?E, 4),(?G, 2),(?H, 5),(?I, 0),(?L, 1),(?S, 9),(?T, 7)]\n  Test.label \"puzzle with seven letters\" <| Test.expect (on (===) (Optional.map List.sort) actual expected)",
    "name": "alphametics.tests.ex7"
  },
  {
    "test_code": "alphametics.tests.ex8 = let\n  actual = solve \"SEND + MORE == MONEY\"\n  expected = Some [(?S, 9),(?E, 5),(?N, 6),(?D, 7),(?M, 1),(?O, 0),(?R, 8),(?Y, 2)]\n  Test.label \"puzzle with eight letters\" <| Test.expect (on (===) (Optional.map List.sort) actual expected)",
    "name": "alphametics.tests.ex8"
  },
  {
    "test_code": "alphametics.tests.ex9 = let\n  actual = solve \"AND + A + STRONG + OFFENSE + AS + A + GOOD == DEFENSE\"\n  expected = Some [(?A, 5),(?D, 3),(?E, 4),(?F, 7),(?G, 8),(?N, 0),(?O, 2),(?R, 1),(?S, 6),(?T, 9)]\n  Test.label \"puzzle with ten letters\" <| Test.expect (on (===) (Optional.map List.sort) actual expected)",
    "name": "alphametics.tests.ex9"
  },
  {
    "test_code": "alphametics.tests.ex10 = let\n  actual = solve \"THIS + A + FIRE + THEREFORE + FOR + ALL + HISTORIES + I + TELL + A + TALE + THAT + FALSIFIES + ITS + TITLE + TIS + A + LIE + THE + TALE + OF + THE + LAST + FIRE + HORSES + LATE + AFTER + THE + FIRST + FATHERS + FORESEE + THE + HORRORS + THE + LAST + FREE + TROLL + TERRIFIES + THE + HORSES + OF + FIRE + THE + TROLL + RESTS + AT + THE + HOLE + OF + LOSSES + IT + IS + THERE + THAT + SHE + STORES + ROLES + OF + LEATHERS + AFTER + SHE + SATISFIES + HER + HATE + OFF + THOSE + FEARS + A + TASTE + RISES + AS + SHE + HEARS + THE + LEAST + FAR + HORSE + THOSE + FAST + HORSES + THAT + FIRST + HEAR + THE + TROLL + FLEE + OFF + TO + THE + FOREST + THE + HORSES + THAT + ALERTS + RAISE + THE + STARES + OF + THE + OTHERS + AS + THE + TROLL + ASSAILS + AT + THE + TOTAL + SHIFT + HER + TEETH + TEAR + HOOF + OFF + TORSO + AS + THE + LAST + HORSE + FORFEITS + ITS + LIFE + THE + FIRST + FATHERS + HEAR + OF + THE + HORRORS + THEIR + FEARS + THAT + THE + FIRES + FOR + THEIR + FEASTS + ARREST + AS + THE + FIRST + FATHERS + RESETTLE + THE + LAST + OF + THE + FIRE + HORSES + THE + LAST + TROLL + HARASSES + THE + FOREST + HEART + FREE + AT + LAST + OF + THE + LAST + TROLL + ALL + OFFER + THEIR + FIRE + HEAT + TO + THE + ASSISTERS + FAR + OFF + THE + TROLL + FASTS + ITS + LIFE + SHORTER + AS + STARS + RISE + THE + HORSES + REST + SAFE + AFTER + ALL + SHARE + HOT + FISH + AS + THEIR + AFFILIATES + TAILOR + A + ROOFS + FOR + THEIR + SAFE == FORTRESSES\"\n  expected = Some [(?A, 1),(?E, 0),(?F, 5),(?H, 8),(?I, 7),(?L, 2),(?O, 6),(?R, 3),(?S, 4),(?T, 9)]\n  Test.label \"puzzle with ten letters and 199 addends\" <| Test.expect (on (===) (Optional.map List.sort) actual expected)",
    "name": "alphametics.tests.ex10"
  }
]
