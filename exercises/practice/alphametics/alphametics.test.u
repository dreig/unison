alphametics.tests.ex1 = let
  actual = solve "I + BB == ILL"
  expected = Some [(?I, 1),(?B, 9),(?L, 0)]
  Test.label "puzzle with three letters" <| Test.expect (on (===) (Optional.map List.sort) actual expected)

alphametics.tests.ex2 = let
  actual = solve "A == B"
  expected = None
  Test.label "solution must have unique value for each letter" <| Test.expect (on (===) (Optional.map List.sort) actual expected)

alphametics.tests.ex3 = let
  actual = solve "ACA + DD == BD"
  expected = None
  Test.label "leading zero solution is invalid" <| Test.expect (on (===) (Optional.map List.sort) actual expected)

alphametics.tests.ex4 = let
  actual = solve "A + A + A + A + A + A + A + A + A + A + A + B == BCC"
  expected = Some [(?A, 9),(?B, 1),(?C, 0)]
  Test.label "puzzle with two digits final carry" <| Test.expect (on (===) (Optional.map List.sort) actual expected)

alphametics.tests.ex5 = let
  actual = solve "AS + A == MOM"
  expected = Some [(?A, 9),(?S, 2),(?M, 1),(?O, 0)]
  Test.label "puzzle with four letters" <| Test.expect (on (===) (Optional.map List.sort) actual expected)

alphametics.tests.ex6 = let
  actual = solve "NO + NO + TOO == LATE"
  expected = Some [(?N, 7),(?O, 4),(?T, 9),(?L, 1),(?A, 0),(?E, 2)]
  Test.label "puzzle with six letters" <| Test.expect (on (===) (Optional.map List.sort) actual expected)

alphametics.tests.ex7 = let
  actual = solve "HE + SEES + THE == LIGHT"
  expected = Some [(?E, 4),(?G, 2),(?H, 5),(?I, 0),(?L, 1),(?S, 9),(?T, 7)]
  Test.label "puzzle with seven letters" <| Test.expect (on (===) (Optional.map List.sort) actual expected)

alphametics.tests.ex8 = let
  actual = solve "SEND + MORE == MONEY"
  expected = Some [(?S, 9),(?E, 5),(?N, 6),(?D, 7),(?M, 1),(?O, 0),(?R, 8),(?Y, 2)]
  Test.label "puzzle with eight letters" <| Test.expect (on (===) (Optional.map List.sort) actual expected)

alphametics.tests.ex9 = let
  actual = solve "AND + A + STRONG + OFFENSE + AS + A + GOOD == DEFENSE"
  expected = Some [(?A, 5),(?D, 3),(?E, 4),(?F, 7),(?G, 8),(?N, 0),(?O, 2),(?R, 1),(?S, 6),(?T, 9)]
  Test.label "puzzle with ten letters" <| Test.expect (on (===) (Optional.map List.sort) actual expected)

alphametics.tests.ex10 = let
  actual = solve
  expected = Some [(?A, 1),(?E, 0),(?F, 5),(?H, 8),(?I, 7),(?L, 2),(?O, 6),(?R, 3),(?S, 4),(?T, 9)]
  Test.label "puzzle with ten letters and 199 addends" <| Test.expect (on (===) (Optional.map List.sort) actual expected)


test> alphametics.test = runAll [
  alphametics.tests.ex1,
  alphametics.tests.ex2,
  alphametics.tests.ex3,
  alphametics.tests.ex4,
  alphametics.tests.ex5,
  alphametics.tests.ex6,
  alphametics.tests.ex7,
  alphametics.tests.ex8,
  alphametics.tests.ex9,
  alphametics.tests.ex10,
]
